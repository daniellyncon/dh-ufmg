# Generated by Django 3.1 on 2020-10-06 22:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('law_suits', '0001_initial'),
        ('documents', '0001_initial'),
        ('people', '0002_person_responsible_advisor'),
    ]

    operations = [
        migrations.AddField(
            model_name='person',
            name='birth_city',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Cidade de nascimento'),
        ),
        migrations.AddField(
            model_name='person',
            name='birth_state',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Cidade de nascimento'),
        ),
        migrations.AddField(
            model_name='person',
            name='birthday',
            field=models.DateField(blank=True, null=True, verbose_name='Data de nascimento'),
        ),
        migrations.AddField(
            model_name='person',
            name='civil_registry',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Registro civil'),
        ),
        migrations.AddField(
            model_name='person',
            name='civil_status',
            field=models.CharField(blank=True, choices=[('1', 'Solteira'), ('2', 'Casada'), ('3', 'Separada'), ('4', 'Divorciada'), ('5', 'Viúva')], max_length=50, null=True, verbose_name='Estado civíl'),
        ),
        migrations.AddField(
            model_name='person',
            name='cnh',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='CNH'),
        ),
        migrations.AddField(
            model_name='person',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail contato'),
        ),
        migrations.AddField(
            model_name='person',
            name='contact_phone',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone contato'),
        ),
        migrations.AddField(
            model_name='person',
            name='cpf',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='CPF'),
        ),
        migrations.AddField(
            model_name='person',
            name='document',
            field=models.ManyToManyField(blank=True, to='documents.Document', verbose_name='Documentos'),
        ),
        migrations.AddField(
            model_name='person',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail'),
        ),
        migrations.AddField(
            model_name='person',
            name='first_appointment_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='full_name',
            field=models.CharField(default='', max_length=100, verbose_name='Nome completo'),
        ),
        migrations.AddField(
            model_name='person',
            name='gender_identity',
            field=models.CharField(blank=True, choices=[('1', 'Agênero'), ('2', 'Cisgênero'), ('3', 'Gênero fluido'), ('4', 'Transgênero'), ('5', 'Crossdresser'), ('6', 'Drag Queen'), ('7', 'Não-binário')], max_length=50, null=True, verbose_name='Identidade de gênero'),
        ),
        migrations.AddField(
            model_name='person',
            name='has_health_problem',
            field=models.BooleanField(blank=True, default=None, null=True, verbose_name='Tem algum problema de saúde?'),
        ),
        migrations.AddField(
            model_name='person',
            name='mother_name',
            field=models.CharField(default='', max_length=100, verbose_name='Nome da mãe'),
        ),
        migrations.AddField(
            model_name='person',
            name='phone',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone'),
        ),
        migrations.AddField(
            model_name='person',
            name='preferred_pronouns',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Pronomes que prefere usar'),
        ),
        migrations.AddField(
            model_name='person',
            name='receives_assistance',
            field=models.BooleanField(blank=True, default=None, null=True, verbose_name='Recebe algum auxílio?'),
        ),
        migrations.AddField(
            model_name='person',
            name='reference_regional_administration',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Regional Administrativa de Referência'),
        ),
        migrations.AddField(
            model_name='person',
            name='related_case_bond',
            field=models.CharField(blank=True, choices=[('1', 'assistido'), ('2', 'jurisdicionado'), ('3', 'atingido'), ('4', 'terceiro'), ('5', 'interessado'), ('6', 'outro')], max_length=30, null=True, verbose_name='Vínculo caso'),
        ),
        migrations.AddField(
            model_name='person',
            name='related_law_suit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='law_suit', to='law_suits.lawsuit'),
        ),
        migrations.AddField(
            model_name='person',
            name='related_law_suit_bond',
            field=models.CharField(blank=True, choices=[('1', 'parte autora'), ('2', 'parte ré'), ('3', 'terceiro'), ('4', 'interessado')], max_length=50, null=True, verbose_name='Vínculo processo'),
        ),
        migrations.AddField(
            model_name='person',
            name='related_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_person', to='people.person', verbose_name='Pessoa relacionada'),
        ),
        migrations.AddField(
            model_name='person',
            name='related_person_bond',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Vínculo'),
        ),
        migrations.AddField(
            model_name='person',
            name='responsible_intern',
            field=models.ManyToManyField(related_name='p_intern', to=settings.AUTH_USER_MODEL, verbose_name='Estagiária responsável'),
        ),
        migrations.AddField(
            model_name='person',
            name='rg',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='RG'),
        ),
        migrations.AddField(
            model_name='person',
            name='schooling',
            field=models.CharField(blank=True, choices=[('1', 'Ensino fundamental incompleto'), ('2', 'Ensino fundamental completo'), ('3', 'Ensino médio incompleto'), ('4', 'Ensino médio completo'), ('5', 'Ensino superior incompleto'), ('6', 'Ensino superior completo')], max_length=50, null=True, verbose_name='Escolaridade'),
        ),
        migrations.AddField(
            model_name='person',
            name='self_identification',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Auto-identificação raça/cor'),
        ),
        migrations.AddField(
            model_name='person',
            name='which_assistance',
            field=models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Qual auxílio'),
        ),
        migrations.AddField(
            model_name='person',
            name='which_health_problem',
            field=models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Qual'),
        ),
        migrations.AlterField(
            model_name='person',
            name='assisted',
            field=models.BooleanField(blank=True, null=True, verbose_name='Pessoa assistida?'),
        ),
        migrations.AlterField(
            model_name='person',
            name='responsible_advisor',
            field=models.ManyToManyField(related_name='p_advisor', to=settings.AUTH_USER_MODEL, verbose_name='Orientadora responsável'),
        ),
    ]
